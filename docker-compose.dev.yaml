services:
  postiz:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: postiz
    restart: always
    environment:
      NODE_OPTIONS: "--max-old-space-size=8192"  # Aumentar a 8GB
      MAIN_URL: "http://localhost:4200"
      #MAIN_URL: "http://flowsupply.me"
      FRONTEND_URL: "http://localhost:4200"
      #FRONTEND_URL: "http://flowsupply.me"
      NEXT_PUBLIC_BACKEND_URL: "http://localhost:3000"
      #NEXT_PUBLIC_BACKEND_URL: "http://flowsupply.me/api"
      JWT_SECRET: "alsidjnlcaedjksmx"
      DATABASE_URL: "postgresql://postiz-user:postiz-password@postiz-postgres:5432/postiz-db-local"
      REDIS_URL: "redis://postiz-redis:6379"
      BACKEND_INTERNAL_URL: "http://postiz:3000"
      #BACKEND_INTERNAL_URL: "http://flowsupply.me/api"
      IS_GENERAL: "true"
      DISABLE_REGISTRATION: "false"
      STORAGE_PROVIDER: "local"
      UPLOAD_DIRECTORY: "/uploads"
      NEXT_PUBLIC_UPLOAD_DIRECTORY: "/uploads"
***REMOVED***
***REMOVED***
***REMOVED***
***REMOVED***
***REMOVED***
      
      #mastodon.social
      #MASTODON_CLIENT_ID: "DQ0PiPVT4bp1c950Y5_pF1ATvVzKaQ4Dvx-0_deneeg"
      #MASTODON_CLIENT_SECRET: "TNv54Deg7G8SMmxFUMbEH5Q7TCdka7j6G7qZqeOiTDc"
      
      #superhappy.social
      #MASTODON_CLIENT_ID: "MASTODON_CLIENT_ID_REMOVED"
      #MASTODON_CLIENT_SECRET: "MASTODON_CLIENT_SECRET_REMOVED"
      #MASTODON_URL: "https://superhappy.social"

    
    volumes:
      - .:/app
      - /app/node_modules
      - postiz-config:/config/
      - postiz-uploads:/uploads/
    ports:
      - "4200:4200"
      - "3000:3000"
    networks:
      - postiz-network
    depends_on:
      postiz-postgres:
        condition: service_healthy
      postiz-redis:
        condition: service_healthy

  postiz-postgres:
    image: postgres:17-alpine
    container_name: postiz-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postiz-password
      POSTGRES_USER: postiz-user
      POSTGRES_DB: postiz-db-local
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - postiz-network
    healthcheck:
      test: pg_isready -U postiz-user -d postiz-db-local
      interval: 10s
      timeout: 3s
      retries: 3

  postiz-redis:
    image: redis:7.2
    container_name: postiz-redis
    restart: always
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postiz-redis-data:/data
    networks:
      - postiz-network

   
volumes:
  postgres-volume:
    external: false
  postiz-redis-data:
    external: false
  postiz-config:
    external: false
  postiz-uploads:
    external: false

networks:
  postiz-network:
    external: false